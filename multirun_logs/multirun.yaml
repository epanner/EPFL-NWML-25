hydra:
  run:
    dir: outputs/${now:%Y-%m-%d}/${now:%H-%M-%S}
  sweep:
    dir: multirun_logs/${hydra.job.override_dirname}
    subdir: ${hydra.job.num}
  launcher:
    _target_: hydra._internal.core_plugins.basic_launcher.BasicLauncher
  sweeper:
    _target_: hydra._internal.core_plugins.basic_sweeper.BasicSweeper
    max_batch_size: null
    params:
      model.eegnet_kernel_size: 32, 64
      model.F1: 32, 64, 128
  help:
    app_name: ${hydra.job.name}
    header: '${hydra.help.app_name} is powered by Hydra.

      '
    footer: 'Powered by Hydra (https://hydra.cc)

      Use --hydra-help to view Hydra specific help

      '
    template: '${hydra.help.header}

      == Configuration groups ==

      Compose your configuration from those groups (group=option)


      $APP_CONFIG_GROUPS


      == Config ==

      Override anything in the config (foo.bar=value)


      $CONFIG


      ${hydra.help.footer}

      '
  hydra_help:
    template: 'Hydra (${hydra.runtime.version})

      See https://hydra.cc for more info.


      == Flags ==

      $FLAGS_HELP


      == Configuration groups ==

      Compose your configuration from those groups (For example, append hydra/job_logging=disabled
      to command line)


      $HYDRA_CONFIG_GROUPS


      Use ''--cfg hydra'' to Show the Hydra config.

      '
    hydra_help: ???
  hydra_logging:
    version: 1
    formatters:
      simple:
        format: '[%(asctime)s][HYDRA] %(message)s'
    handlers:
      console:
        class: logging.StreamHandler
        formatter: simple
        stream: ext://sys.stdout
    root:
      level: INFO
      handlers:
      - console
    loggers:
      logging_example:
        level: DEBUG
    disable_existing_loggers: false
  job_logging:
    version: 1
    formatters:
      simple:
        format: '[%(asctime)s][%(name)s][%(levelname)s] - %(message)s'
    handlers:
      console:
        class: logging.StreamHandler
        formatter: simple
        stream: ext://sys.stdout
      file:
        class: logging.FileHandler
        formatter: simple
        filename: ${hydra.runtime.output_dir}/${hydra.job.name}.log
    root:
      level: INFO
      handlers:
      - console
      - file
    disable_existing_loggers: false
  env: {}
  mode: MULTIRUN
  searchpath: []
  callbacks: {}
  output_subdir: .hydra
  overrides:
    hydra:
    - hydra.mode=MULTIRUN
    task: []
  job:
    name: main
    chdir: null
    override_dirname: ''
    id: ???
    num: ???
    config_name: sweep_eeg.yaml
    env_set: {}
    env_copy: []
    config:
      override_dirname:
        kv_sep: '='
        item_sep: ','
        exclude_keys: []
  runtime:
    version: 1.3.2
    version_base: '1.1'
    cwd: /home/veit/Uni/Lausanne/NML/EPFL-NWML-25
    config_sources:
    - path: hydra.conf
      schema: pkg
      provider: hydra
    - path: /home/veit/Uni/Lausanne/NML/EPFL-NWML-25/config
      schema: file
      provider: main
    - path: ''
      schema: structured
      provider: schema
    output_dir: ???
    choices:
      model: eeg_net
      preprocessing: github_filter
      hydra/env: default
      hydra/callbacks: null
      hydra/job_logging: default
      hydra/hydra_logging: default
      hydra/hydra_help: default
      hydra/help: default
      hydra/sweeper: basic
      hydra/launcher: basic
      hydra/output: default
  verbose: false
preprocessing:
  steps:
  - _target_: github_filter
    lowcut: 0.5
    highcut: 50
    fs: 250
    resampleFS: 250
model:
  F1: 128
  D: 2
  eegnet_kernel_size: 32
  eegnet_separable_kernel_size: 16
  eegnet_pooling_1: 8
  eegnet_pooling_2: 4
  dropout_eegnet: 0.3
  MSA_num_heads: 3
  transformer_dim_feedforward: 2048
  num_transformer_layers: 6
  flag_positional_encoding: true
  num_eeg_channels: 19
  sequence_length: 3000
  optimizer:
    lr: 0.0001
  scheduler:
    step_size: 10
    gamma: 0.1
dataset:
  data_path: /home/veit/Uni/Lausanne/NML/EPFL-NWML-25/content/networkML
  train_set: train/train
  test_set: test/test
  distances_set: distances_3d.csv
train:
  max_epochs: 1000
  batch_size: 512
  seed: 42
  prefetch_dataset: false
  gradient_clip_val: 0.5
  comp_mode: false
early_stopping:
  monitor: val_loss
  monitor_comp_mode: train_loss
  patience: 50
checkpoint:
  monitor: val_loss
  monitor_comp_mode: train_loss
  save_top_k: 1
